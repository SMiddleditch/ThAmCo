// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThAmCo.Catering.Models;

namespace ThAmCo.Catering.Migrations
{
    [DbContext(typeof(CateringContext))]
    [Migration("20211217163541_IntialCreate")]
    partial class IntialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ThAmCo.Catering.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuId");

                    b.ToTable("Menu");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            MenuName = "BBQ"
                        },
                        new
                        {
                            MenuId = 2,
                            MenuName = "Roast"
                        },
                        new
                        {
                            MenuId = 3,
                            MenuName = "Cakes"
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Models.foodBooking", b =>
                {
                    b.Property<int>("FoodBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientReference")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuest")
                        .HasColumnType("int");

                    b.HasKey("FoodBookingId");

                    b.HasIndex("MenuId");

                    b.ToTable("foodBooking");

                    b.HasData(
                        new
                        {
                            FoodBookingId = 1,
                            ClientReference = 1,
                            MenuId = 1,
                            NumberOfGuest = 10
                        },
                        new
                        {
                            FoodBookingId = 2,
                            ClientReference = 2,
                            MenuId = 2,
                            NumberOfGuest = 20
                        },
                        new
                        {
                            FoodBookingId = 3,
                            ClientReference = 3,
                            MenuId = 3,
                            NumberOfGuest = 30
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Models.foodItem", b =>
                {
                    b.Property<int>("FoodItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.HasKey("FoodItemId");

                    b.ToTable("foodItems");

                    b.HasData(
                        new
                        {
                            FoodItemId = 1,
                            Description = "Sausages",
                            UnitPrice = 100f
                        },
                        new
                        {
                            FoodItemId = 2,
                            Description = "Chicken",
                            UnitPrice = 200f
                        },
                        new
                        {
                            FoodItemId = 3,
                            Description = "RedVelvet",
                            UnitPrice = 300f
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Models.menuFoodItem", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("FoodItemId")
                        .HasColumnType("int");

                    b.HasKey("MenuId", "FoodItemId");

                    b.HasIndex("FoodItemId");

                    b.ToTable("menuFoodItem");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            FoodItemId = 1
                        },
                        new
                        {
                            MenuId = 2,
                            FoodItemId = 2
                        },
                        new
                        {
                            MenuId = 3,
                            FoodItemId = 3
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Models.foodBooking", b =>
                {
                    b.HasOne("ThAmCo.Catering.Models.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ThAmCo.Catering.Models.menuFoodItem", b =>
                {
                    b.HasOne("ThAmCo.Catering.Models.foodItem", "foodItem")
                        .WithMany("menuFoodItem")
                        .HasForeignKey("FoodItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThAmCo.Catering.Models.Menu", "Menu")
                        .WithMany("menuFoodItem")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
