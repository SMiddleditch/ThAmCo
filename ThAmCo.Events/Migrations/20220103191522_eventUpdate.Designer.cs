// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThAmCo.Events.Models;

namespace ThAmCo.Events.Migrations
{
    [DbContext(typeof(EventContext))]
    [Migration("20220103191522_eventUpdate")]
    partial class eventUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ThAmCo.Events.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            FirstName = "Stephen",
                            LastName = "Hawking"
                        },
                        new
                        {
                            CustomerId = 2,
                            FirstName = "Albert",
                            LastName = "Einstein"
                        },
                        new
                        {
                            CustomerId = 3,
                            FirstName = "Carl",
                            LastName = "Sagan"
                        });
                });

            modelBuilder.Entity("ThAmCo.Events.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventId");

                    b.ToTable("Event");

                    b.HasData(
                        new
                        {
                            EventId = 1,
                            DateTime = new DateTime(2021, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Wedding",
                            EventType = "Party"
                        },
                        new
                        {
                            EventId = 2,
                            DateTime = new DateTime(2019, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Birthday",
                            EventType = "Party"
                        },
                        new
                        {
                            EventId = 3,
                            DateTime = new DateTime(2018, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventTitle = "Funeral",
                            EventType = "Party"
                        });
                });

            modelBuilder.Entity("ThAmCo.Events.Models.GuestBooking", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("GuestBooking");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            EventId = 1
                        },
                        new
                        {
                            CustomerId = 2,
                            EventId = 2
                        },
                        new
                        {
                            CustomerId = 3,
                            EventId = 3
                        });
                });

            modelBuilder.Entity("ThAmCo.Events.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("FirstAid")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.ToTable("Staff");

                    b.HasData(
                        new
                        {
                            StaffId = 1,
                            FirstAid = true,
                            FirstName = "Jack",
                            JobType = "Chef",
                            LastName = "Johnson"
                        },
                        new
                        {
                            StaffId = 2,
                            FirstAid = false,
                            FirstName = "Sarah",
                            JobType = "Server",
                            LastName = "Hawking"
                        },
                        new
                        {
                            StaffId = 3,
                            FirstAid = false,
                            FirstName = "Paul",
                            JobType = "Cleaner",
                            LastName = "Walker"
                        });
                });

            modelBuilder.Entity("ThAmCo.Events.Models.Staffing", b =>
                {
                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("EventId", "StaffId");

                    b.HasIndex("StaffId");

                    b.ToTable("Staffing");

                    b.HasData(
                        new
                        {
                            EventId = 1,
                            StaffId = 1
                        },
                        new
                        {
                            EventId = 2,
                            StaffId = 2
                        },
                        new
                        {
                            EventId = 3,
                            StaffId = 3
                        });
                });

            modelBuilder.Entity("ThAmCo.Events.Models.GuestBooking", b =>
                {
                    b.HasOne("ThAmCo.Events.Models.Customer", "Customer")
                        .WithMany("GuestBooking")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThAmCo.Events.Models.Event", "Event")
                        .WithMany("GuestBooking")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ThAmCo.Events.Models.Staffing", b =>
                {
                    b.HasOne("ThAmCo.Events.Models.Event", "Event")
                        .WithMany("Staffing")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThAmCo.Events.Models.Staff", "Staff")
                        .WithMany("Staffing")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
